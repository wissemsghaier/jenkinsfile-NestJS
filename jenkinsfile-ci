pipeline {
    agent any

    environment {
        // Define environment variables
        NEXUS_CREDENTIALS_ID = 'emna-nexus-credentials'
        NEXUS_URL = 'https://nexus.u-cloudsolutions.xyz'
        NEXUS_REPOSITORY = 'student-repository'
        MAVEN_GROUP_ID = 'com.mycompany.nest'
        MAVEN_ARTIFACT_ID = 'my-artifact'
        ZIP_FILE_NAME = "${MAVEN_ARTIFACT_ID}-${GIT_COMMIT_ID}.zip"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                script {
                    def scmInfo = checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/develop']],
                        userRemoteConfigs: [[
                            url: 'https://gitlab.u-cloudsolutions.xyz/summary-internship/2024/emna-bouaziz/nest-project.git',
                            credentialsId: 'emna-gitlab-credentials'
                        ]]
                    ])
                    env.GIT_COMMIT_ID = scmInfo.GIT_COMMIT.take(8) // Truncate commit ID to 8 characters
                    echo "Checked out commit ID: ${env.GIT_COMMIT_ID}"
                }
            }
        }



        stage('Install Node.js Packages') {
            steps {
                sh 'npm install'
            }
        }

        stage('Build Project') {
            steps {
                sh 'npm run build'
            }
        }


        stage('Code Quality Check via SonarQube') {
            steps {
                script {
                    def scannerHome = tool 'sonarqube-scanner'
                    withSonarQubeEnv('sonarqube-container') {
                        sh """
                        ${scannerHome}/bin/sonar-scanner \
                        -Dsonar.projectKey=nest-project-emna \
                        -Dsonar.projectName=nest-project-emna \
                        -Dsonar.sources=. \
                        -Dsonar.host.url=https://sonarqube.u-cloudsolutions.xyz \
                        -Dsonar.login=squ_d690104d2547bcbc73d95f1e2974f2b447a5c2bc \
                        -Dsonar.exclusions=vendor/**
                        """
                    }
                }
            }
        }

        stage('Package Project') {
            steps {
                script {
                    echo "Packaging project as ${ZIP_FILE_NAME}..."
                    sh "zip -r ${ZIP_FILE_NAME} ."
                    echo 'Project packaging complete.'
                }
            }
        }

        stage('Upload to Nexus') {
            steps {
                script {
                    echo "Uploading ${ZIP_FILE_NAME} to Nexus..."

                    withCredentials([usernamePassword(credentialsId: NEXUS_CREDENTIALS_ID, usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        def uploadUrl = "${NEXUS_URL}/repository/${NEXUS_REPOSITORY}/${MAVEN_GROUP_ID.replace('.', '/')}/${MAVEN_ARTIFACT_ID}/${env.GIT_COMMIT_ID}/${ZIP_FILE_NAME}"
                        
                        sh """
                        curl -u $NEXUS_USERNAME:$NEXUS_PASSWORD --upload-file ${ZIP_FILE_NAME} "$uploadUrl"
                        """
                    }
                    echo 'Upload to Nexus complete.'
                }
            }
        }
    }
}
